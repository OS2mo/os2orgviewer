# SPDX-FileCopyrightText: 2019-2020 Magenta ApS
# SPDX-License-Identifier: MPL-2.0

################################################################################
# Changes to this file requires approval from Labs. Please add a person from   #
# Labs as required approval to your MR if you have any changes.                #
################################################################################

# For `docker push` to work, the following envionment variables have to set in
# the Gitlab UI.
# RELEASE_REGISTRY_USER
# RELEASE_REGISTRY_PASSWORD

stages:
  - lint
  - build
# - test
  - release
  - deploy

variables:
  # Project variables
  RELEASE_REGISTRY: docker.io
  RELEASE_REGISTRY_IMAGE: index.docker.io/magentaaps/os2orgviewer

  IMAGE_SHA: ${CI_REGISTRY_IMAGE}:${CI_COMMIT_SHA}

  IMAGE_LATEST: ${RELEASE_REGISTRY_IMAGE}:latest
  IMAGE_VERSION: ${RELEASE_REGISTRY_IMAGE}

include:
  - project: 'labs/salt-automation'
    ref: 'feature/46450_os2mo_gitlab_ci_template'
    file: '/gitlab-ci-templates/common/autopub.v1.yml'
  - project: 'labs/salt-automation'
    ref: 'feature/46450_os2mo_gitlab_ci_template'
    file: '/gitlab-ci-templates/common/docker-release.v1.yml'

.manual-rules: &master-rules
  rules:
    - if: $CI_COMMIT_TAG =~ /^(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)$/
      when: never
    - if: $CI_COMMIT_REF_NAME == "master"
      when: never
    - when: always

# Only run pipeline when pushing a tag or a branch.
# This is a workaround for a bug causing detached pipelines on MRs
# See: https://gitlab.com/gitlab-org/gitlab/-/issues/34756
#      https://docs.gitlab.com/ee/ci/yaml/#workflowrules-templates
workflow:
  rules:
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH

# Lint stage
#############

.lint-default: &lint-default
  <<: *master-rules
  stage: lint
  needs: []
  image: python:3.7
  services: []
  tags:
    - docker

Lint Dockerfiles:
  <<: *lint-default
  image: hadolint/hadolint:latest-debian
  before_script:
    - apt-get -y update
    - apt-get -y install --no-install-recommends git
  script:
    - git ls-files --exclude='Dockerfile*' --ignored | xargs --max-lines=1 hadolint


# Build stage
#############

Build OS2OrgViewer:
  stage: build
  needs: []
  image:
    # We use kaniko v0.16.0 as both v0.17.0, v0.17.1, v0.18.0 and v0.19.0 contains fatal bugs.
    name: gcr.io/kaniko-project/executor:debug-v0.16.0
    entrypoint: [""]
  tags:
    - docker
  script:
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor
      --cache
      --context=$CI_PROJECT_DIR
      --dockerfile=$CI_PROJECT_DIR/docker/Dockerfile
      --destination=${IMAGE_SHA}


# Test stage
############


# Release stage
###############
